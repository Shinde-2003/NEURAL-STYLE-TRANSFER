# -*- coding: utf-8 -*-
"""NeuralStyleTransfer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AwST4C2D1-eCWetQIFWJRIU8v001C68D
"""

!pip install gradio

import tensorflow as tf
import tensorflow_hub as hub
import numpy as np
import cv2
import gradio as gr
from PIL import Image

# Load Pretrained Model
model = hub.load('https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/2')

def process_image(image):
    image = image.convert("RGB")
    image = np.array(image)
    image = image.astype(np.float32)[np.newaxis, ...] / 255.0
    return tf.image.resize(image, (256, 256))

def stylize_image(content, style):
    content = process_image(content)
    style = process_image(style)
    stylized_image = model(tf.constant(content), tf.constant(style))[0]
    return Image.fromarray(np.array(stylized_image[0] * 255, dtype=np.uint8))

# UI with Gradio
def generate_stylized_image(content, style):
    return stylize_image(content, style)

iface = gr.Interface(
    fn=generate_stylized_image,
    inputs=[gr.Image(type="pil"), gr.Image(type="pil")],
    outputs="image",
    title="Neural Style Transfer",
    description="Upload a content image and a style image to generate a stylized image."
)

# Run UI
iface.launch()